// ///////////////////////////////////////////////////////////////////////////
// xrb_bitarray.cpp by Victor Dods, created 2005/05/02
// ///////////////////////////////////////////////////////////////////////////
// Unless a different license was explicitly granted in writing by the
// copyright holder (Victor Dods), this software is freely distributable under
// the terms of the GNU General Public License, version 2.  Any works deriving
// from this work must also be released under the GNU GPL.  See the included
// file LICENSE for details.
// ///////////////////////////////////////////////////////////////////////////

// this file is included from xrb_bitarray.h, inside the namespace Xrb

template <Uint32 bit_count>
BitArray<bit_count> const BitArray<bit_count>::ms_zero(ZERO);

template <Uint32 bit_count>
BitArray<bit_count> const BitArray<bit_count>::ms_one(ONE);

template <Uint32 bit_count>
void BitArray<bit_count>::Fprint (
    FILE *const fptr,
    Uint32 const chunk_size,
    bool const add_newline) const
{
    fprintf(fptr, "BitArray (%u) = (", bit_count);
    for (Uint32 i = HIGHEST_BIT_INDEX; i <= HIGHEST_BIT_INDEX; --i)
    {
        fputc(Bit(i) ? '1' : '0', fptr);
        if (i != 0 &&
            chunk_size != 0 &&
            i % chunk_size == 0)
        {
            fputc(' ', fptr);
        }
    }
    fprintf(fptr, ")%c", add_newline ? '\n' : '\0');
}

template <Uint32 bit_count>
void BitArray<bit_count>::FprintAsWords (
    FILE *const fptr,
    bool const add_newline) const
{
    fprintf(fptr, "BitArray (%u) words = (", bit_count);
    for (Uint32 i = HIGHEST_WORD_INDEX; i <= HIGHEST_WORD_INDEX; --i)
    {
        fprintf(fptr, "%08X", GetWord(i));
        if (i > 0)
            fputc(' ', fptr);
    }
    fprintf(fptr, ")%c", add_newline ? '\n' : '\0');
}

